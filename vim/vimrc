filetype indent plugin on

set clipboard=unnamed,unnamedplus
set splitright
set splitbelow
set wrap
set linebreak
set noswapfile
set nobackup
set nowritebackup
set autowrite
set foldmethod=indent
set nofoldenable " All folds open when entering a buffer
set textwidth=80
set colorcolumn=81
set autoindent
set lazyredraw
set nomodeline  " Disable external set commands
set modelines=0 " Disable external set commands
set backspace=2 " Enable backspace to work as expected
set incsearch
set hlsearch
" set ignorecase
set undofile " Persistent undo, even if you close and reopen Vim
set undodir="$HOME/.vim/undos"
set nojoinspaces " No double spaces with join

" Indentation settings
set softtabstop=2
set shiftwidth=2
set tabstop=2
set expandtab
set shiftround " Round indent to multiple of shiftwidth

" Visual settings
set number relativenumber
set numberwidth=1
set background=dark
set laststatus=2
set cursorline
set guifont=JetBrains\ Mono\ ExtraLight\ 11

" colorscheme
syntax on
packadd! dracula_pro
colorscheme dracula_pro
let g:dracula_colorterm = 0
"colorscheme iceberg

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300

" tks @philss for the mappings below üëç(from https://github.com/philss/dotfiles)
" Mapping <tab> to change tabs navigation
noremap <tab> :tabnext<CR>
noremap <S-tab> :tabprevious<CR>

nnoremap fj <esc>
inoremap fj <esc>
vnoremap fj <esc>

" Open file under cursor in another tab
" noremap of <C-w>gf<CR>

" statusline used markers:
"   %< truncation point
"   %f full path to file
"   %m modified flag [+] (modified), [-] (unmodifiable) or nothing
"   %= split point for left and right justification
"   %y filetype [ruby]
"   %r readonly flag [RO]
"   %l current line number
"   %L number of lines in buffer
"   %c current column number
"   %P percentage through buffer (smart, includes 'Top' and 'Bot' markers)
set statusline=%<\ %F\ %m%=%y%r\ L\ %l\/\%L\ C\ %c%V\ (%P)

hi Normal ctermbg=233 ctermfg=253
"hi Comment ctermfg=245 ctermbg=232
hi CursorLine ctermbg=232 cterm=none
hi LineNr ctermfg=240 ctermbg=233 cterm=none
hi CursorLineNr ctermfg=240 ctermbg=233 cterm=none
hi StatusLine ctermbg=234 ctermfg=255 cterm=none
hi StatusLineNc ctermbg=235 ctermfg=245 cterm=none
hi ColorColumn ctermbg=235
hi VertSplit ctermbg=235 ctermfg=235 cterm=none
hi TabLine ctermbg=235 ctermfg=245 cterm=none
hi TabLineSel ctermbg=233 ctermfg=255 cterm=none
hi TabLineFill ctermbg=235 ctermfg=245 cterm=none
hi Folded ctermbg=235 ctermfg=255 cterm=none

hi DraculaCyanItalic cterm=none
hi DraculaGreenItalic cterm=none
hi DraculaOrangeItalic cterm=none
hi DraculaPurpleItalic cterm=none

"hi! link pythonTripleQuotes Comment
"hi! link pythonDocstring Comment
"hi! link pythonDecorator Comment
"hi! link pythonDecoratorName Comment
"hi! link pythonDocTest Comment
"hi! link pythonDocTestValue Comment

"hi! link rubySharpBang Comment

"hi! link gitCommitSummary Normal

"hi! link javaCommentTitle Comment
"hi! link javaDocTags Comment
"hi! link javaDocParam Comment

"hi! link htmlLink Normal

let mapleader = "-"

" Identify the highlight group under the cursor
" map <leader>h :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name")
" \ . '> trans<'
" \ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
" \ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

" Make splits navigation easies
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-h> <c-w>h

" Auto close brackets
inoremap " ""<left>
inoremap ' ''<left>
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O
inoremap {;<CR> {<CR>};<ESC>O

nnoremap <leader>q :q!<cr>
nnoremap <leader>w :w!<cr>

" moves selection up/down
nnoremap J :m .+1<CR>==
nnoremap K :m .-2<CR>==
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
inoremap J <Esc>:m .+1<CR>==gi
inoremap K <Esc>:m .-2<CR>==gi

" Remove unwanted white spaces
autocmd FileType typescriptreact,tsx,typescript,vim,sh,ruby,python,php,javascript,html,css autocmd BufWritePre <buffer> %s/\s\+$//e

autocmd FileType python,php set softtabstop=4 shiftwidth=4

" set filetypes as typescriptreact
autocmd BufNewFile,BufRead *.tsx,*.jsx set filetype=typescriptreact

" Always jump to the last known cursor position when editing a file,
" except for commit messages.
" Retired from https://github.com/thoughtbot/dotfiles/blob/master/vimrc
autocmd BufReadPost *
  \ if &ft != 'gitcommit' && line("'\"") > 0 && line("'\"") <= line("$") |
  \   exe "normal g`\"" |
  \ endif

" Changes current working directory
nnoremap <leader>d :cd %:p:h<CR>:pwd<CR>

" CoC settings
let g:coc_disable_startup_warning = 1
let g:coc_global_extensions = [
  \ 'coc-tsserver',
  \ 'coc-html',
  \ 'coc-css',
  \ 'coc-json',
  \ 'coc-prettier',
  \ 'coc-stylelint',
  \ 'coc-solargraph',
  \ 'coc-snippets'
  \ ]

nmap <silent> gi <Plug>(coc-definition)
nmap <silent> gr <Plug>(coc-references)
xmap <leader>f  <Plug>(coc-format-selected)
nmap <leader>f  <Plug>(coc-format-selected)
xmap <leader>x  <Plug>(coc-convert-snippet)
inoremap <silent><expr> <c-space> coc#refresh()

" Show element documentation
function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  elseif (coc#rpc#ready())
    call CocActionAsync('doHover')
  else
    execute '!' . &keywordprg . " " . expand('<cword>')
  endif
endfunction
nnoremap <silent> gd :call <SID>show_documentation()<CR>

" Trigger completion
let g:coc_snippet_next = '<tab>'

inoremap <silent><expr> <TAB>
      \ coc#pum#visible() ? coc#_select_confirm() :
      \ coc#expandableOrJumpable() ? "\<C-r>=coc#rpc#request('doKeymap', ['snippets-expand-jump',''])\<CR>" :
      \ CheckBackSpace() ? "\<TAB>" :
      \ coc#refresh()

function! CheckBackSpace() abort
    let col = col('.') - 1
      return !col || getline('.')[col - 1]  =~# '\s'
    endfunction


" NERDTree settings
let NERDTreeShowLineNumbers=1
let NERDTreeShowHidden=1
let NERDTreeMinimalUI=1
let NERDTreeIgnore=['node_modules', '.git']

" NERDTree keybindings
nnoremap <leader>t :NERDTreeToggle<cr>
nnoremap <leader>r :NERDTreeFocus<cr>

" make sure relative line numbers are used
autocmd FileType nerdtree setlocal relativenumber


" vim-prettier settings
let g:prettier#autoformat = 1
let g:prettier#autoformat_require_pragma = 0
let g:prettier#exec_cmd_async = 1
